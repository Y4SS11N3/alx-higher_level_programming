Importing class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Instantiate BaseGeometry:
    >>> bg = BaseGeometry()

Trying to print the area (should raise an Exception):
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

Passing integer to integer_validator (should not raise):
    >>> bg.integer_validator("my_int", 12)

Passing a string instead of integer (should raise TypeError):
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

Passing a boolean True (should raise TypeError because bool is a subclass of int but not considered a 'pure' integer here):
    >>> bg.integer_validator("is_true", True)
    Traceback (most recent call last):
    ...
    TypeError: is_true must be an integer

Passing zero (should raise ValueError):
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

Passing a negative integer (should raise ValueError):
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

Passing a positive integer (should not raise):
    >>> bg.integer_validator("width", 89)
